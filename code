package covid19;

import java.io.IOException;
import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.Mapper;
import org.apache.hadoop.mapreduce.Reducer;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;

public class analysis {

    // Mapper Class
    public static class analysisMapper extends Mapper<Object, Text, Text, IntWritable> {
        private final static IntWritable one = new IntWritable(1);
        private Text ratingKey = new Text();

        public void map(Object key, Text value, Context context) throws IOException, InterruptedException {
            // Split the input line into fields
            String[] fields = value.toString().split(",");

            // Check if the line has enough fields
            if (fields.length > 4) { // Ensure there are enough columns
                // Rating of online class experience is at index 4
                String rating = fields[4].trim();

                // Emit rating count
                ratingKey.set(rating); // Set the rating as the key
                context.write(ratingKey, one); // Emit rating with a count of 1
            }
        }
    }

    // Reducer Class
    public static class analysisReducer extends Reducer<Text, IntWritable, Text, IntWritable> {
        public void reduce(Text key, Iterable<IntWritable> values, Context context) throws IOException, InterruptedException {
            int sum = 0;
            // Sum up all the counts for each rating
            for (IntWritable val : values) {
                sum += val.get();
            }
            context.write(key, new IntWritable(sum)); // Emit rating and total count
        }
    }

    public static void main(String[] args) throws Exception {
        Configuration conf = new Configuration();
        Job job = Job.getInstance(conf, "Online Class Rating Analysis");
        job.setJarByClass(analysis.class);
        job.setMapperClass(analysisMapper.class);
        job.setCombinerClass(analysisReducer.class);
        job.setReducerClass(analysisReducer.class);
        job.setOutputKeyClass(Text.class);
        job.setOutputValueClass(IntWritable.class);
        FileInputFormat.addInputPath(job, new Path(args[0]));
        FileOutputFormat.setOutputPath(job, new Path(args[1]));
        System.exit(job.waitForCompletion(true) ? 0 : 1);
    }
}
